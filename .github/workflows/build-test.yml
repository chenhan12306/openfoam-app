name: Build and test

on:
  workflow_call:
    inputs:
      openfoam-version:
        type: string
        required: true
      app-version:
        type: string
        default: ${{ github.ref_name }}
        required: false
      source-tarball-url:
        type: string
        default: ''
        required: false
      use-cached:
        type: boolean
        default: true
        required: false
      release:
        type: boolean
        default: false
        required: false

env:
  MAKE_VARS: >
    OPENFOAM_VERSION=${{ inputs.openfoam-version }}
    APP_VERSION=${{ inputs.app-version }}
    ${{ inputs.source-tarball-url != '' && format('SOURCE_TARBALL_URL={0}', inputs.source-tarball-url) || '' }}

jobs:
  deps:
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache build
        id: cache_build
        uses: actions/cache@v3
        with:
          path: |
            build/*-deps.sparsebundle
            build/*-build.sparsebundle
          key: deps-${{ inputs.openfoam-version }}-${{ runner.arch }}-${{ hashFiles('Makefile', 'Brewfile') }}-${{ github.run_id }}
          restore-keys: |
            deps-${{ inputs.openfoam-version }}-${{ runner.arch }}-${{ hashFiles('Makefile', 'Brewfile') }}-${{ ! inputs.use-cached && github.run_id || '' }}
      - name: Make deps
        if: steps.cache_build.outputs.cache-hit != 'true'
        run: |
          touch -c build/*-deps.sparsebundle
          make deps $MAKE_VARS

  apps:
    needs: deps
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache build
        id: cache_build
        uses: actions/cache@v3
        with:
          path: |
            build/*-deps.sparsebundle
            build/*-build.sparsebundle
          key: build-${{ inputs.openfoam-version }}-${{ runner.arch }}-${{ hashFiles('Makefile', 'Brewfile', format('OpenFOAM-v${0}.tgz.sha256', inputs.openfoam-version), 'configure.sh') }}-${{ github.run_id }}
          restore-keys: |
            build-${{ inputs.openfoam-version }}-${{ runner.arch }}-${{ hashFiles('Makefile', 'Brewfile', format('OpenFOAM-v${0}.tgz.sha256', inputs.openfoam-version), 'configure.sh') }}-${{ ! inputs.use-cached && github.run_id || '' }}
            deps-${{ inputs.openfoam-version }}-${{ runner.arch }}-${{ hashFiles('Makefile', 'Brewfile') }}-${{ github.run_id }}
      - name: Build
        if: steps.cache_build.outputs.cache-hit != 'true'
        run: |
          touch -c build/*-deps.sparsebundle
          touch -c build/*-build.sparsebundle
          make build $MAKE_VARS
      - name: Reuse cached build
        if: steps.cache_build.outputs.cache-hit == 'true'
        run: |
          touch -c build/*-build.sparsebundle
      - name: Make standalone app
        run: |
          make zip $MAKE_VARS DEPENDENCIES_KIND=standalone
      - name: Upload standalone app
        uses: actions/upload-artifact@v3
        with:
          name: zip-${{ inputs.openfoam-version }}-standalone-${{ runner.arch }}
          path: build/*-app-standalone-*.zip
          if-no-files-found: error
      - name: Clean app build
        run: |
          make clean-app $MAKE_VARS
      - name: Make Homebrew-based app
        run: |
          make zip $MAKE_VARS DEPENDENCIES_KIND=homebrew
      - name: Upload Homebrew-based app
        uses: actions/upload-artifact@v3
        with:
          name: zip-${{ inputs.openfoam-version }}-homebrew-${{ runner.arch }}
          path: build/*-app-homebrew-*.zip
          if-no-files-found: error

  test:
    needs: apps
    strategy:
      matrix:
        os: [macos-11, macos-12]
        dependencies-kind: [standalone, homebrew]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download app
        uses: actions/download-artifact@v3
        with:
          name: zip-${{ inputs.openfoam-version }}-${{ matrix.dependencies-kind }}-${{ runner.arch }}
          path: build
      - name: Unzip app
        run: |
          unzip *-app-*.zip
        working-directory: build
      - name: Install Homebrew dependencies
        if: matrix.dependencies-kind == 'homebrew'
        run: |
          brew bundle --verbose
      - name: Test
        run: |
          make test $MAKE_VARS DEPENDENCIES_KIND=${{ matrix.dependencies-kind }}

  release:
    needs: test
    if: inputs.release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dependencies-kind: [standalone, homebrew]
      fail-fast: false
    steps:
      - name: Download zip artifact
        uses: actions/download-artifact@v3
        with:
          name: zip-${{ inputs.openfoam-version }}-${{ matrix.dependencies-kind }}-${{ runner.arch }}
      - name: Upload zip to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: '*-app-*.zip'
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: false
