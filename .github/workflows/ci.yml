name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Get version number
        id: get_version
        uses: battila7/get-version-action@v2
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache DMG file
        id: cache_dmg
        uses: actions/cache@v3
        with:
          path: |
            build/*.dmg
            !build/*-build.dmg
          key: dmg-${{ runner.arch }}-${{ hashFiles('Brewfile', 'configure.sh', 'icon.icns', 'Makefile', 'sha256sums.txt') }}
      - name: Reuse cached DMG
        if: steps.cache_dmg.outputs.cache-hit == 'true'
        run: |
          make install-dependencies
          make --touch dmg
      - name: Build
        run: |
          make zip APP_VERSION=${{ steps.get_version.outputs.version-without-v }}
      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v3
        with:
          name: zip-${{ runner.arch }}
          path: build/*.zip
          if-no-files-found: error

  test:
    needs: build
    strategy:
      matrix:
        os: [macos-10.15, macos-11, macos-12]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download ZIP artifact
        uses: actions/download-artifact@v3
        with:
          name: zip-${{ runner.arch }}
          path: build
      - name: Recover app and DMG file from artifact
        run: |
          unzip *.zip
          cp *.app/Contents/Resources/*.dmg .
        working-directory: build
      - name: Test
        run: |
          make install-dependencies
          make test
  
  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download ZIP artifact
        uses: actions/download-artifact@v3
        with:
          name: zip-${{ runner.arch }}
      - name: Upload ZIP to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: '*.zip'
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: true
